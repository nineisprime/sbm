
\section{Model and Problem Formulation}
\label{sec:formulation}

\subsection{Model Definition}

Consider a network with $n$ nodes and $K \geq 2$ communities. In this paper, we suppose that the communities are approximately balanced; that is, there exists a \emph{cluster-imbalance constant} $\beta$ such that the cluster size $n_k$ for each cluster $k = 1,...,K$ satisfies $\frac{\beta n}{K} \geq n_k \geq \frac{n}{\beta K}$. For each node $u$, we let $\sigma(u) \in \{1,2,...,K\}$ denote the community assignment of the nodes. 

\begin{definition} (Homogeneous Stochastic Block Model) \\
An edge random variable $A_{uv}$ has the following distribution:
\[
A_{uv} \sim \left\{ \begin{array}{cc}
 Ber(p) & \trm{ if } \sigma(u) = \sigma(v) \\
 Ber(q) & \trm{ if } \sigma(u) \neq \sigma(v) 
\end{array} \right.
\]
\end{definition}

In the more general case of \emph{heterogenous} SBM, we have a $K \times K$ matrix $P$ where each entry $P_{ij} \in [0,1]$. The edge random variable is drawn from $A_{uv} \sim Ber(P_{\sigma(u), \sigma(v)}$. We focus on the homogeneous case in this paper but discuss how to extend our results to the heterogenous setting.

SBM gives a distribution over the set of all networks whose edges are binary. To adapt to networks with continuous edge weights, we generalize the homogenous SBM by adding a second step to the data generating process: an edge weight is sampled from a continuous distribution after it is generated. 

\begin{definition} (Weighted Homogeneous SBM) \\
\label{def:weighted_homo_sbm1}
Let $0 < P_0, Q_0 < 1$ and let $p(x), q(x)$ be two densities. We first generate the edge presence indicator $Z_{uv}$:
\[
Z_{uv} \sim 
    \left\{ \begin{array}{cc}
    Ber(1-P_0) & \trm{ if } \sigma(u) = \sigma(v) \\
    Ber(1-Q_0) & \trm{ if } \sigma(u) \neq \sigma(v)
   \end{array} \right.
\]
The edge weight random variable is then:

\[
A_{uv} \sim \left\{ \begin{array}{cc} 
     0 & \trm{ if } Z_{uv} = 0 \\
     p(x) & \trm{ if } Z_{uv} = 1 \trm{ and } \sigma(u) = \sigma(v) \\
     q(x) & \trm{ if } Z_{uv} = 1 \trm{ and } \sigma(u) \neq \sigma(v) 
\end{array} \right.
\]

\end{definition}

In this model, an edge is missing with probability either $P_0$ or $Q_0$ depending on whether the potential edge connects two nodes in the same cluster or in different clusters. If the edge is present, then it is given an edge weight drawn from either the density $p(x)$ or $q(x)$, depending again on the nature of the edge. If $p(x)$ and $q(x)$ are Dirac Delta mass at 1, then the weighted homogenous SBM reduces to homogeneous SBM with $p = 1 - P_0$ and $q = 1 - Q_0$. 

\begin{figure}[htp]
\centering
\includegraphics[scale=0.4]{../figs/weightedSBM.jpg}
\caption{weighted stochastic block model}
\label{fig:weighted_stochastic_block_model}
\end{figure}


The model defined in \ref{def:weighted_homo_sbm1} is the focus of our method. However, it is useful to note that we can further generalize model~\ref{def:weighted_homo_sbm1} by allowing both weights and labels. 

\begin{definition} (Weighted and Labeled Homogenous SBM) \\
\label{def:weighted_homo_sbm2}
Let $P, Q$ be two general mixed distributions. The edge random variable $A_{uv}$ is drawn as
\[
A_{uv} \sim \left\{ 
   \begin{array}{cc} 
   P & \trm{ if } \sigma(u) = \sigma(v) \\
   Q & \trm{ if } \sigma(u) \neq \sigma(v)
   \end{array} \right.
\]
\end{definition}
In the case where $P, Q$ are mixed distributions with continuous part $(1-P_0) p(x)$ and $(1-Q_0) q(x)$ respectively and a discrete point mass of $P_0, Q_0$ at zero respectively, then we get back the weighted SBM. 

\subsection{Problem Formulation}

We study in this paper two problems on the weighted stochastic block model. Our first goal is to find a tractable community recovery algorithm whose mis-clustering error can be shown to converge to zero at an optimal rate. Our second goal is to find the threshold at which exact recovery of the communities shift from almost never possible to almost always possible. 

\subsubsection{Community Recovery Algorithm}

The goal of a community recovery algorithm is to take as input the adjacency matrix $A$ and try to recover the community assignments. We evaluate a community recovery algorithm by looking at its mis-clustering error rate. Mathematically, if $\sigma_0$ is the true clustering and $\hat{\sigma}$ is the clustering generated by a community recovery algorithm, then we measure the performance by looking at the following loss function:
\[
l(\hat{\sigma}, \sigma_0) \equiv \min_{\tau \in S_K} \frac{1}{n} \trm{Hamming}(\hat{\sigma},\, \tau \circ \sigma_0 )
\]
where $\trm{Hamming}(\cdot, \, \cdot)$ denotes the Hamming distance. In the definition of mis-clustering error rate, we minimize over the set of permutations $\tau$ on $K$ objects because clusterings are idenfiable only up to a permutation of their labels. $\hat{\sigma}$ is a random quantity both because the community recovery algorithm may be stochastic and because the network $A$ -- the input to the algorithm -- is random. Thus, we aim to bound $l(\hat{\sigma}, \sigma_0)$ in probability.

\subsubsection{Exact Threshold Behavior}

We are interested in the regime in which exact recovery is possible, that is, there exists an algorithm whose outputted assignment $\hat{\sigma}$ is equal to the true community assignment, which we denote with from here on by $\sigma_0$. Recent results from literature have shown that SBM has an exact recovery threshold. 



%%% Local Variables:
%%% mode: latex
%%% TeX-master: "paper"
%%% End:
